module Test_CT

include(joinpath(@__DIR__,"..", "..", "src", "ZMPBipedRobot.jl"))
import .ZMPBipedRobot as ZMProbot
using Test, Plots

sleep(0.1) # used for good printing
println("Started test")


# If the maximal  error is bounded within -2cm and + 2cm with the ZMP generated by Preview Controller and the reference ZMP 
@testset "CoM Trajectory Generator" begin 
    br = ZMProbot.BipedRobot(;
        readFile = true,
        paramFileName = "param_test.jl",
    )
    pc = ZMProbot.PreviewController(br = br)
    fp = ZMProbot.FootPlanner(br = br)
    zt = ZMProbot.ZMPTrajectory(br = br, fp = fp)
    ct = ZMProbot.CoMTrajectory(; br = br, pc = pc, zt = zt, check = false)

    tref = reduce(vcat, zt.timeVec)
    p = reduce(hcat, ct.p[2:end])
    zmp = reduce(hcat, zt.ZMP[2:end])

    @test [isapprox(p[1, i], zmp[1, i], atol = 0.02) for i = 1 : length(p[1, :])] == ones(length(p[1, :]))
    @test [isapprox(p[2, i], zmp[2, i], atol = 0.02) for i = 1 : length(p[1, :])] == ones(length(p[1, :]))
end 

sleep(0.1) # used for good printing
println("End test")

end # End Main Module 
